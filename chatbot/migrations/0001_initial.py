# Generated by Django 5.2 on 2025-06-27 21:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('iso2', models.CharField(max_length=2)),
                ('iso3', models.CharField(max_length=3)),
                ('numeric_code', models.CharField(max_length=3)),
                ('phonecode', models.CharField(max_length=10)),
                ('capital', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=10)),
                ('currency_name', models.CharField(max_length=100)),
                ('currency_symbol', models.CharField(max_length=10)),
                ('tld', models.CharField(max_length=10)),
                ('native', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('subregion', models.CharField(max_length=100)),
                ('timezones', models.JSONField()),
                ('translations', models.JSONField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('emoji', models.CharField(max_length=10)),
                ('emojiU', models.CharField(max_length=20)),
                ('flag', models.BooleanField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='LugarGooglePlaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('direccion', models.CharField(max_length=500)),
                ('tipo_principal', models.CharField(choices=[('hotel', 'Hotel'), ('restaurant', 'Restaurante'), ('coffee_shop', 'Cafetería'), ('chinese_restaurant', 'Restaurante Chino'), ('bar', 'Bar'), ('lodging', 'Alojamiento'), ('aquarium', 'Acuario'), ('beach', 'Playa'), ('market', 'Mercado'), ('park', 'Parque'), ('museum', 'Museo'), ('church', 'Iglesia'), ('historical_landmark', 'Monumento Histórico'), ('tourist_attraction', 'Atracción Turística'), ('night_club', 'Club Nocturno'), ('bar_and_grill', 'Bar y Parrilla'), ('home_goods_store', 'Tienda de Hogar'), ('art_gallery', 'Galería de Arte'), ('shopping_mall', 'Centro Comercial'), ('store', 'Tienda'), ('supermarket', 'Supermercado'), ('food_store', 'Tienda de Comida'), ('discount_store', 'Tienda de Descuentos'), ('department_store', 'Tienda por Departamentos'), ('water_park', 'Parque Acuático'), ('movie_theater', 'Cine'), ('casino', 'Casino'), ('amusement_park', 'Parque de Diversiones'), ('amusement_center', 'Centro de Entretenimiento'), ('event_venue', 'Lugar de Eventos'), ('food', 'Comida'), ('point_of_interest', 'Punto de Interés'), ('establishment', 'Establecimiento'), ('bakery', 'Panadería'), ('cafe', 'Café'), ('dessert_shop', 'Tienda de Postres'), ('confectionery', 'Confitería'), ('ice_cream_shop', 'Heladería'), ('hamburger_restaurant', 'Restaurante de Hamburguesas'), ('american_restaurant', 'Restaurante Americano'), ('inn', 'Posada'), ('natural_feature', 'Característica Natural'), ('place_of_worship', 'Lugar de Culto'), ('historical_place', 'Lugar Histórico'), ('cafeteria', 'Cafetería'), ('brunch_restaurant', 'Restaurante de Brunch'), ('painter', 'Pintor'), ('courier_service', 'Servicio de Mensajería'), ('grocery_store', 'Tienda de Abarrotes'), ('wholesaler', 'Mayorista'), ('clothing_store', 'Tienda de Ropa'), ('sporting_goods_store', 'Tienda Deportiva'), ('furniture_store', 'Tienda de Muebles'), ('home_improvement_store', 'Tienda de Mejoras para el Hogar')], max_length=50)),
                ('tipos_adicionales', models.JSONField(default=list, help_text='Lista de tipos adicionales del establecimiento')),
                ('place_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('latitud', models.FloatField()),
                ('longitud', models.FloatField()),
                ('rating', models.FloatField(default=0)),
                ('total_ratings', models.IntegerField(default=0)),
                ('website', models.URLField(blank=True, max_length=500, null=True)),
                ('telefono', models.CharField(blank=True, max_length=50, null=True)),
                ('horarios', models.JSONField(default=list, help_text='Horarios de operación por día')),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('resumen_ia', models.TextField(blank=True, null=True)),
                ('palabras_clave_ia', models.TextField(blank=True, help_text='Palabras clave extraídas del resumen para embeddings eficientes', null=True)),
                ('estado_negocio', models.CharField(default='OPERATIONAL', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'lugar_google_places',
            },
        ),
        migrations.CreateModel(
            name='NivelPrecio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.IntegerField(unique=True)),
                ('descripcion', models.CharField(max_length=200)),
                ('rango_inferior', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rango_superior', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('moneda', models.CharField(default='PEN', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'nivel_precio',
                'ordering': ['nivel'],
            },
        ),
        migrations.CreateModel(
            name='Transporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('estado', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'transporte',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('country', models.ForeignKey(db_column='country_id', on_delete=django.db.models.deletion.CASCADE, to='chatbot.countries')),
            ],
            options={
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Itinerario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lugar', models.CharField(default='', max_length=255)),
                ('num_dias', models.IntegerField(default=1)),
                ('estado', models.CharField(default='borrador', max_length=20)),
                ('titulo', models.CharField(default='', max_length=200)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('num_noches', models.IntegerField(default=0)),
                ('presupuesto_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('moneda_presupuesto', models.CharField(default='PEN', max_length=3)),
                ('preferencias_actividades', models.JSONField(default=list)),
                ('preferencias_alimentacion', models.JSONField(default=list)),
                ('preferencias_alojamiento', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pais', models.ForeignKey(blank=True, db_column='pais_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='chatbot.countries')),
                ('nivel_precio_preferido', models.ForeignKey(blank=True, db_column='nivel_precio_preferido_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='chatbot.nivelprecio')),
                ('transporte', models.ForeignKey(blank=True, db_column='transporte_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='chatbot.transporte')),
            ],
            options={
                'db_table': 'itinerario',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiaItinerario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_numero', models.IntegerField(help_text='Número del día (1, 2, 3, etc.)')),
                ('fecha', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('itinerario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dias', to='chatbot.itinerario')),
                ('hotel', models.ForeignKey(blank=True, limit_choices_to={'tipo_principal__in': ['hotel', 'lodging', 'inn']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dias_hotel', to='chatbot.lugargoogleplaces')),
            ],
            options={
                'db_table': 'dia_itinerario',
                'ordering': ['dia_numero'],
                'unique_together': {('itinerario', 'dia_numero')},
            },
        ),
        migrations.AddField(
            model_name='lugargoogleplaces',
            name='nivel_precios',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='chatbot.nivelprecio'),
        ),
        migrations.CreateModel(
            name='Viaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presupuesto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dia_salida', models.DateField()),
                ('duracion_viaje', models.IntegerField()),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_proceso', 'En Proceso'), ('completado', 'Completado'), ('cancelado', 'Cancelado')], default='pendiente', max_length=20)),
                ('ciudad_salida', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='chatbot.cities')),
            ],
            options={
                'db_table': 'viaje',
            },
        ),
        migrations.AddField(
            model_name='itinerario',
            name='viaje',
            field=models.ForeignKey(blank=True, db_column='viaje_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='chatbot.viaje'),
        ),
        migrations.CreateModel(
            name='ActividadItinerario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_actividad', models.CharField(choices=[('visita_turistica', 'Visita Turística'), ('restaurante', 'Restaurante'), ('cafe', 'Café'), ('bar', 'Bar'), ('shopping', 'Compras'), ('entretenimiento', 'Entretenimiento'), ('transporte', 'Transporte'), ('descanso', 'Descanso'), ('otro', 'Otro')], max_length=30)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('duracion_minutos', models.IntegerField(help_text='Duración estimada en minutos')),
                ('costo_estimado', models.DecimalField(blank=True, decimal_places=2, help_text='Costo estimado de la actividad', max_digits=10, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('notas_adicionales', models.TextField(blank=True, null=True)),
                ('orden', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actividades', to='chatbot.diaitinerario')),
                ('lugar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actividades_itinerario', to='chatbot.lugargoogleplaces')),
            ],
            options={
                'db_table': 'actividad_itinerario',
                'ordering': ['dia', 'orden', 'hora_inicio'],
                'unique_together': {('dia', 'orden')},
            },
        ),
        migrations.AddIndex(
            model_name='lugargoogleplaces',
            index=models.Index(fields=['tipo_principal'], name='lugar_googl_tipo_pr_055e16_idx'),
        ),
        migrations.AddIndex(
            model_name='lugargoogleplaces',
            index=models.Index(fields=['latitud', 'longitud'], name='lugar_googl_latitud_f97585_idx'),
        ),
        migrations.AddIndex(
            model_name='lugargoogleplaces',
            index=models.Index(fields=['rating'], name='lugar_googl_rating_bb5765_idx'),
        ),
        migrations.AddIndex(
            model_name='lugargoogleplaces',
            index=models.Index(fields=['place_id'], name='lugar_googl_place_i_b57365_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lugargoogleplaces',
            unique_together={('nombre', 'direccion', 'latitud', 'longitud')},
        ),
    ]
